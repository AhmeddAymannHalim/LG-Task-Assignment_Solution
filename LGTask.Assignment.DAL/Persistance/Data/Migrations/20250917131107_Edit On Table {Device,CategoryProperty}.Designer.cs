// <auto-generated />
using System;
using LGTask.Assignment.DAL.Persistance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LGTask.Assignment.DAL.Persistance.Data.Migrations
{
    [DbContext(typeof(ITDepartmentDbContext))]
    [Migration("20250917131107_Edit On Table {Device,CategoryProperty}")]
    partial class EditOnTableDeviceCategoryProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.Categories.DeviceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceCategories");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.CategoryProperties.CategoryProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCategoryId");

                    b.HasIndex("PropertyItemId");

                    b.ToTable("CategoryProperties");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.DevicePropertyValues.DevicePropertyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PropertyId");

                    b.ToTable("DevicePropertyValues");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.Devices.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AcquisitionDate")
                        .HasColumnType("date");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCategoryId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.PropertyItems.PropertyItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyItems");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.CategoryProperties.CategoryProperty", b =>
                {
                    b.HasOne("LGTask.Assignment.DAL.Models.Categories.DeviceCategory", "DeviceCategory")
                        .WithMany("Properties")
                        .HasForeignKey("DeviceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGTask.Assignment.DAL.Models.PropertyItems.PropertyItem", "PropertyItem")
                        .WithMany()
                        .HasForeignKey("PropertyItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceCategory");

                    b.Navigation("PropertyItem");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.DevicePropertyValues.DevicePropertyValue", b =>
                {
                    b.HasOne("LGTask.Assignment.DAL.Models.Devices.Device", "Device")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGTask.Assignment.DAL.Models.PropertyItems.PropertyItem", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.Devices.Device", b =>
                {
                    b.HasOne("LGTask.Assignment.DAL.Models.Categories.DeviceCategory", "DeviceCategory")
                        .WithMany()
                        .HasForeignKey("DeviceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceCategory");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.Categories.DeviceCategory", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("LGTask.Assignment.DAL.Models.Devices.Device", b =>
                {
                    b.Navigation("DevicePropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
